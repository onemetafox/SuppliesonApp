///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class ProductListModelDataProductsCategoriesParentCategory {
/*
{
  "_id": "5ea59bc2d8d93354f6161308",
  "arabicName": "مخبوزات",
  "englishName": "Bakery"
}
*/

  String Id;
  String arabicName;
  String englishName;

  ProductListModelDataProductsCategoriesParentCategory({
    this.Id,
    this.arabicName,
    this.englishName,
  });
  ProductListModelDataProductsCategoriesParentCategory.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    arabicName = json['arabicName']?.toString();
    englishName = json['englishName']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['arabicName'] = arabicName;
    data['englishName'] = englishName;
    return data;
  }
}

class ProductListModelDataProductsCategories {
/*
{
  "_id": "5ea870e7d8d93354f616130f",
  "parentCategory": {
    "_id": "5ea59bc2d8d93354f6161308",
    "arabicName": "مخبوزات",
    "englishName": "Bakery"
  },
  "arabicName": "دونات",
  "englishName": "Dounat"
}
*/

  String Id;
  ProductListModelDataProductsCategoriesParentCategory parentCategory;
  String arabicName;
  String englishName;

  ProductListModelDataProductsCategories({
    this.Id,
    this.parentCategory,
    this.arabicName,
    this.englishName,
  });
  ProductListModelDataProductsCategories.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    parentCategory = (json['parentCategory'] != null) ? ProductListModelDataProductsCategoriesParentCategory.fromJson(json['parentCategory']) : null;
    arabicName = json['arabicName']?.toString();
    englishName = json['englishName']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    if (parentCategory != null) {
      data['parentCategory'] = parentCategory.toJson();
    }
    data['arabicName'] = arabicName;
    data['englishName'] = englishName;
    return data;
  }
}

class ProductListModelDataProductsUnit {
/*
{
  "_id": "5ea87137d8d93354f6161311",
  "englishName": "PC",
  "arabicName": "قطعه"
}
*/

  String Id;
  String englishName;
  String arabicName;

  ProductListModelDataProductsUnit({
    this.Id,
    this.englishName,
    this.arabicName,
  });
  ProductListModelDataProductsUnit.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    englishName = json['englishName']?.toString();
    arabicName = json['arabicName']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['englishName'] = englishName;
    data['arabicName'] = arabicName;
    return data;
  }
}

class ProductListModelDataProducts {
/*
{
  "_id": "5f1aaf5acce33f65397fa7f7",
  "supplier": "5f1a9c45cce33f65397fa7eb",
  "arabicName": "دونات الكاسترد (كبير)",
  "englishName": "Custard Donut (Large)",
  "arabicDescription": "دونات محشي بالكاسترد",
  "englishDescription": "Donut stuffed with Custard",
  "sku": "SKU005L",
  "price": 5,
  "unit": {
    "_id": "5ea87137d8d93354f6161311",
    "englishName": "PC",
    "arabicName": "قطعه"
  },
  "__v": 0,
  "deleted": false,
  "createdAt": "2020-07-24T12:52:26.726Z",
  "status": "Active",
  "coverPhoto": "https://supplieson.com/images/97e0d80e6e34cc7012b6eaba0e579edd",
  "images": [
    "https://supplieson.com/images/"
  ],
  "categories": [
    {
      "_id": "5ea870e7d8d93354f616130f",
      "parentCategory": {
        "_id": "5ea59bc2d8d93354f6161308",
        "arabicName": "مخبوزات",
        "englishName": "Bakery"
      },
      "arabicName": "دونات",
      "englishName": "Dounat"
    }
  ]
}
*/

  String Id;
  String supplier;
  String arabicName;
  String englishName;
  String arabicDescription;
  String englishDescription;
  String sku;
  int price;
  ProductListModelDataProductsUnit unit;
  int v;
  bool deleted;
  String createdAt;
  String status;
  String coverPhoto;
  List<String> images;
  List<ProductListModelDataProductsCategories> categories;

  ProductListModelDataProducts({
    this.Id,
    this.supplier,
    this.arabicName,
    this.englishName,
    this.arabicDescription,
    this.englishDescription,
    this.sku,
    this.price,
    this.unit,
    this.v,
    this.deleted,
    this.createdAt,
    this.status,
    this.coverPhoto,
    this.images,
    this.categories,
  });
  ProductListModelDataProducts.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    supplier = json['supplier']?.toString();
    arabicName = json['arabicName']?.toString();
    englishName = json['englishName']?.toString();
    arabicDescription = json['arabicDescription']?.toString();
    englishDescription = json['englishDescription']?.toString();
    sku = json['sku']?.toString();
    price = json['price']?.toInt();
    unit = (json['unit'] != null) ? ProductListModelDataProductsUnit.fromJson(json['unit']) : null;
    v = json['__v']?.toInt();
    deleted = json['deleted'];
    createdAt = json['createdAt']?.toString();
    status = json['status']?.toString();
    coverPhoto = json['coverPhoto']?.toString();
    if (json['images'] != null) {
      final v = json['images'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      images = arr0;
    }
    if (json['categories'] != null) {
      final v = json['categories'];
      final arr0 = <ProductListModelDataProductsCategories>[];
      v.forEach((v) {
        arr0.add(ProductListModelDataProductsCategories.fromJson(v));
      });
      categories = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['supplier'] = supplier;
    data['arabicName'] = arabicName;
    data['englishName'] = englishName;
    data['arabicDescription'] = arabicDescription;
    data['englishDescription'] = englishDescription;
    data['sku'] = sku;
    data['price'] = price;
    if (unit != null) {
      data['unit'] = unit.toJson();
    }
    data['__v'] = v;
    data['deleted'] = deleted;
    data['createdAt'] = createdAt;
    data['status'] = status;
    data['coverPhoto'] = coverPhoto;
    if (images != null) {
      final v = images;
      final arr0 = [];
      v.forEach((v) {
        arr0.add(v);
      });
      data['images'] = arr0;
    }
    if (categories != null) {
      final v = categories;
      final arr0 = [];
      v.forEach((v) {
        arr0.add(v.toJson());
      });
      data['categories'] = arr0;
    }
    return data;
  }
}

class ProductListModelData {
/*
{
  "products": [
    {
      "_id": "5f1aaf5acce33f65397fa7f7",
      "supplier": "5f1a9c45cce33f65397fa7eb",
      "arabicName": "دونات الكاسترد (كبير)",
      "englishName": "Custard Donut (Large)",
      "arabicDescription": "دونات محشي بالكاسترد",
      "englishDescription": "Donut stuffed with Custard",
      "sku": "SKU005L",
      "price": 5,
      "unit": {
        "_id": "5ea87137d8d93354f6161311",
        "englishName": "PC",
        "arabicName": "قطعه"
      },
      "__v": 0,
      "deleted": false,
      "createdAt": "2020-07-24T12:52:26.726Z",
      "status": "Active",
      "coverPhoto": "https://supplieson.com/images/97e0d80e6e34cc7012b6eaba0e579edd",
      "images": [
        "https://supplieson.com/images/"
      ],
      "categories": [
        {
          "_id": "5ea870e7d8d93354f616130f",
          "parentCategory": {
            "_id": "5ea59bc2d8d93354f6161308",
            "arabicName": "مخبوزات",
            "englishName": "Bakery"
          },
          "arabicName": "دونات",
          "englishName": "Dounat"
        }
      ]
    }
  ],
  "count": 4
}
*/

  List<ProductListModelDataProducts> products;
  int count;

  ProductListModelData({
    this.products,
    this.count,
  });
  ProductListModelData.fromJson(Map<String, dynamic> json) {
    if (json['products'] != null) {
      final v = json['products'];
      final arr0 = <ProductListModelDataProducts>[];
      v.forEach((v) {
        arr0.add(ProductListModelDataProducts.fromJson(v));
      });
      products = arr0;
    }
    count = json['count']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (products != null) {
      final v = products;
      final arr0 = [];
      v.forEach((v) {
        arr0.add(v.toJson());
      });
      data['products'] = arr0;
    }
    data['count'] = count;
    return data;
  }
}

class ProductListModel {
/*
{
  "status": "Success",
  "errorCode": 0,
  "data": {
    "products": [
      {
        "_id": "5f1aaf5acce33f65397fa7f7",
        "supplier": "5f1a9c45cce33f65397fa7eb",
        "arabicName": "دونات الكاسترد (كبير)",
        "englishName": "Custard Donut (Large)",
        "arabicDescription": "دونات محشي بالكاسترد",
        "englishDescription": "Donut stuffed with Custard",
        "sku": "SKU005L",
        "price": 5,
        "unit": {
          "_id": "5ea87137d8d93354f6161311",
          "englishName": "PC",
          "arabicName": "قطعه"
        },
        "__v": 0,
        "deleted": false,
        "createdAt": "2020-07-24T12:52:26.726Z",
        "status": "Active",
        "coverPhoto": "https://supplieson.com/images/97e0d80e6e34cc7012b6eaba0e579edd",
        "images": [
          "https://supplieson.com/images/"
        ],
        "categories": [
          {
            "_id": "5ea870e7d8d93354f616130f",
            "parentCategory": {
              "_id": "5ea59bc2d8d93354f6161308",
              "arabicName": "مخبوزات",
              "englishName": "Bakery"
            },
            "arabicName": "دونات",
            "englishName": "Dounat"
          }
        ]
      }
    ],
    "count": 4
  }
}
*/

  String status;
  int errorCode;
  ProductListModelData data;

  ProductListModel({
    this.status,
    this.errorCode,
    this.data,
  });
  ProductListModel.fromJson(Map<String, dynamic> json) {
    status = json['status']?.toString();
    errorCode = json['errorCode']?.toInt();
    data = (json['data'] != null) ? ProductListModelData.fromJson(json['data']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    data['errorCode'] = errorCode;
    if (data != null) {
      data['data'] = this.data.toJson();
    }
    return data;
  }
}

